name: Build and Package

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢查倉庫
      uses: actions/checkout@v2

    - name: 設置 Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: 安裝相依套件
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 更新版本號
      run: |
        date_string=$(date +'%Y%m%d%H%M%S')
        echo $date_string > AutoLottery539_version.txt

    - name: Package Application
      uses: JackMcKew/pyinstaller-action-windows@main
      with:
        path: .
        spec: path/to/AutoLottery539.spec   # Update this with the path to your AutoLottery539.spec file

    - name: Create publish directory
      run: mkdir -p publish

    - name: Move exe to publish directory
      run: mv dist/windows/AutoLottery539.exe publish/

    - uses: actions/upload-artifact@v2
      with:
        name: name-of-artifact
        path: publish/

    - name: 将配置文件复制到发布目录
      run: |
        cp config.ini publish/

    - name: 将版本文件复制到发布目录
      run: |
        cp AutoLottery539_version.txt publish/
        
    - name: 设置执行权限
      run: chmod +x publish/AutoLottery539.exe

    - name: 將發布目錄壓縮
      run: |
        zip -r output.zip publish/

    - name: 显示版本号
      run: echo v$(< AutoLottery539_version.txt)
    
    - name: 获取版本号
      id: get_version
      run: echo ::set-output name=tag_name::$(< AutoLottery539_version.txt)
    
    - name: 發布 Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.tag_name }}
        RELEASE_NAME: "Release ${{ steps.get_version.outputs.tag_name }}"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./output.zip
        asset_name: AutoLottery539-${{ steps.get_version.outputs.tag_name }}.zip
        asset_content_type: application/zip
        
    - name: Upload AutoLottery539_version.txt as artifact
      uses: actions/upload-artifact@v2
      with:
          name: version-info
          path: .\publish\AutoLottery539_version.txt 
